@*
    PAGE ACCESSIBLE BY ADMIN TO CHANGE USERS' DATA
*@

@page "/users/update/{Id:int}"
@rendermode InteractiveServer
@inject UpdateUserUseCase UpdateUserCase
@inject GetUserByIdUseCase GetUserCase
@inject NavigationManager Navigation
@inject Session Session
<PageTitle>FMS | Users</PageTitle>

<form class="form">
    <p id="heading">User #@_user.Id</p>
    @if (!_update)
    {
        <div class="field">
            <input readonly class="input" type="text" value="@_user.FirstName" />
        </div>
        <div class="field">
            <input readonly class="input" type="text" value="@_user.LastName" />
        </div>
        <div class="field">
            <input readonly class="input" type="email" value="@_user.Email" />
        </div>
    }
    else
    {
        <div class="field">
            <input class="input" type="text" placeholder="First name" @bind="_user.FirstName" @ref="_firstName" />
        </div>
        <div class="field">
            <input class="input" type="text" placeholder="Last name" @bind="_user.LastName" @ref="_lastName" />
        </div>
        <div class="field">
            <input class="input" type="email" placeholder="Email" @bind="_user.Email" @ref="_email" />
        </div>
    }
    <div class="div-btn">
        @if (!_update)
        {
            <button type="button" class="button1" @onclick="Toggle">Update</button>
        }
        else
        {
            <button type="button" class="button1" @onclick="Update">Save changes</button>
        }
        <button type="button" class="button2" @onclick="ChangePassword">Change password</button>
    </div>
</form>
<DialogueError @ref=_dialogue />

@code {
    [Parameter] public int Id { get; set; }
    DialogueError _dialogue = null!;
    User _user = new();
    ElementReference _firstName;
    ElementReference _lastName;
    ElementReference _email;
    bool _update = false;

    void Toggle() => _update = !_update;
    void ChangePassword() => Navigation.NavigateTo($"/users/update/{_user.Id}/forgot-password");

    protected override void OnInitialized()
    {
        try
        {
            _user = GetUserCase.Execute(Id);
        }
        catch
        {
            Navigation.NavigateTo("users");
        }
    }

    void Update()
    {
        try
        {
            UpdateUserCase.Execute(_user, _user.Password);
            Navigation.NavigateTo($"users/{(int)Math.Ceiling(_user.Id / 5.0)}");
        }
        catch (Exception ex)
        {
            _dialogue.Show(ex.Message);
        }
    }
}

<style>
    .form {
        display: flex;
        flex-direction: column;
        gap: 10px;
        background-color: #1f2937;
        width: 515px;
        padding-left: 2em;
        padding-right: 2em;
        padding-bottom: 0.4em;
        border-radius: 10px;
    }

    #heading {
        text-align: center;
        margin: 2em;
        color: rgb(255, 255, 255);
        font-size: 1.2em;
    }

    .field {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5em;
        border-radius: 10px;
        padding: 0.6em;
        border: none;
        outline: none;
        color: white;
        background-color: #374151;
    }

    .input {
        background: none;
        border: none;
        outline: none;
        width: 100%;
        color: #d3d3d3;
    }

    option {
        background-color: #374151;
        color: #d3d3d3;
        padding: 1rem;
    }

    .div-btn {
        display: flex;
        justify-content: center;
        flex-direction: row;
        margin-top: 2.5em;
        padding: .375rem .75rem;
    }

    .button1 {
        padding: 0.5em;
        padding-left: 1.1em;
        padding-right: 1.1em;
        border-radius: 5px;
        margin-right: 0.5em;
        border: none;
        outline: none;
        transition: .4s ease-in-out;
        background-color: #2563EB;
        color: white;
    }

    .button2 {
        padding: 0.5em;
        padding-left: 2.3em;
        padding-right: 2.3em;
        border-radius: 5px;
        border: none;
        outline: none;
        transition: .4s ease-in-out;
        background-color: #6C757D;
        color: white;
    }
</style>